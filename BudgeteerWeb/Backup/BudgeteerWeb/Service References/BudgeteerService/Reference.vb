'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4963
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace BudgeteerService
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Subcategory", [Namespace]:="http://schemas.datacontract.org/2004/07/BudgeteerObjects"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Subcategory
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ActiveField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BalanceField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CategoryIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NotesField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SinkingFundField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubcategoryIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Active() As Boolean
            Get
                Return Me.ActiveField
            End Get
            Set
                If (Me.ActiveField.Equals(value) <> true) Then
                    Me.ActiveField = value
                    Me.RaisePropertyChanged("Active")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Balance() As Decimal
            Get
                Return Me.BalanceField
            End Get
            Set
                If (Me.BalanceField.Equals(value) <> true) Then
                    Me.BalanceField = value
                    Me.RaisePropertyChanged("Balance")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CategoryID() As Long
            Get
                Return Me.CategoryIDField
            End Get
            Set
                If (Me.CategoryIDField.Equals(value) <> true) Then
                    Me.CategoryIDField = value
                    Me.RaisePropertyChanged("CategoryID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Notes() As String
            Get
                Return Me.NotesField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NotesField, value) <> true) Then
                    Me.NotesField = value
                    Me.RaisePropertyChanged("Notes")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SinkingFund() As Boolean
            Get
                Return Me.SinkingFundField
            End Get
            Set
                If (Me.SinkingFundField.Equals(value) <> true) Then
                    Me.SinkingFundField = value
                    Me.RaisePropertyChanged("SinkingFund")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SubcategoryID() As Long
            Get
                Return Me.SubcategoryIDField
            End Get
            Set
                If (Me.SubcategoryIDField.Equals(value) <> true) Then
                    Me.SubcategoryIDField = value
                    Me.RaisePropertyChanged("SubcategoryID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Type() As String
            Get
                Return Me.TypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TypeField, value) <> true) Then
                    Me.TypeField = value
                    Me.RaisePropertyChanged("Type")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Transaction", [Namespace]:="http://schemas.datacontract.org/2004/07/BudgeteerObjects"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Transaction
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AccountIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AmountField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CheckNumberField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubcategoryIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TaxAmountField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TransactionDateField As System.Nullable(Of Date)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TransactionIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AccountID() As Long
            Get
                Return Me.AccountIDField
            End Get
            Set
                If (Me.AccountIDField.Equals(value) <> true) Then
                    Me.AccountIDField = value
                    Me.RaisePropertyChanged("AccountID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Amount() As Decimal
            Get
                Return Me.AmountField
            End Get
            Set
                If (Me.AmountField.Equals(value) <> true) Then
                    Me.AmountField = value
                    Me.RaisePropertyChanged("Amount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CheckNumber() As Integer
            Get
                Return Me.CheckNumberField
            End Get
            Set
                If (Me.CheckNumberField.Equals(value) <> true) Then
                    Me.CheckNumberField = value
                    Me.RaisePropertyChanged("CheckNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SubcategoryID() As Long
            Get
                Return Me.SubcategoryIDField
            End Get
            Set
                If (Me.SubcategoryIDField.Equals(value) <> true) Then
                    Me.SubcategoryIDField = value
                    Me.RaisePropertyChanged("SubcategoryID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TaxAmount() As Decimal
            Get
                Return Me.TaxAmountField
            End Get
            Set
                If (Me.TaxAmountField.Equals(value) <> true) Then
                    Me.TaxAmountField = value
                    Me.RaisePropertyChanged("TaxAmount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TransactionDate() As System.Nullable(Of Date)
            Get
                Return Me.TransactionDateField
            End Get
            Set
                If (Me.TransactionDateField.Equals(value) <> true) Then
                    Me.TransactionDateField = value
                    Me.RaisePropertyChanged("TransactionDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TransactionID() As Long
            Get
                Return Me.TransactionIDField
            End Get
            Set
                If (Me.TransactionIDField.Equals(value) <> true) Then
                    Me.TransactionIDField = value
                    Me.RaisePropertyChanged("TransactionID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Paginator", [Namespace]:="http://schemas.datacontract.org/2004/07/BudgeteerService"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Paginator
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FirstPageField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastPageField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PageNumberField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private PageSizeField As Integer
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FirstPage() As Integer
            Get
                Return Me.FirstPageField
            End Get
            Set
                If (Me.FirstPageField.Equals(value) <> true) Then
                    Me.FirstPageField = value
                    Me.RaisePropertyChanged("FirstPage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastPage() As Integer
            Get
                Return Me.LastPageField
            End Get
            Set
                If (Me.LastPageField.Equals(value) <> true) Then
                    Me.LastPageField = value
                    Me.RaisePropertyChanged("LastPage")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PageNumber() As Integer
            Get
                Return Me.PageNumberField
            End Get
            Set
                If (Me.PageNumberField.Equals(value) <> true) Then
                    Me.PageNumberField = value
                    Me.RaisePropertyChanged("PageNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property PageSize() As Integer
            Get
                Return Me.PageSizeField
            End Get
            Set
                If (Me.PageSizeField.Equals(value) <> true) Then
                    Me.PageSizeField = value
                    Me.RaisePropertyChanged("PageSize")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="TransactionFilterCriteria", [Namespace]:="http://schemas.datacontract.org/2004/07/BudgeteerObjects"),  _
     System.SerializableAttribute()>  _
    Partial Public Class TransactionFilterCriteria
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AccountIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AmountField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CheckNumberField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubcategoryIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TaxAmountField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TransactionDayField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TransactionIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TransactionMonthField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TransactionYearField As Integer
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AccountID() As Long
            Get
                Return Me.AccountIDField
            End Get
            Set
                If (Me.AccountIDField.Equals(value) <> true) Then
                    Me.AccountIDField = value
                    Me.RaisePropertyChanged("AccountID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Amount() As Decimal
            Get
                Return Me.AmountField
            End Get
            Set
                If (Me.AmountField.Equals(value) <> true) Then
                    Me.AmountField = value
                    Me.RaisePropertyChanged("Amount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CheckNumber() As Integer
            Get
                Return Me.CheckNumberField
            End Get
            Set
                If (Me.CheckNumberField.Equals(value) <> true) Then
                    Me.CheckNumberField = value
                    Me.RaisePropertyChanged("CheckNumber")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SubcategoryID() As Long
            Get
                Return Me.SubcategoryIDField
            End Get
            Set
                If (Me.SubcategoryIDField.Equals(value) <> true) Then
                    Me.SubcategoryIDField = value
                    Me.RaisePropertyChanged("SubcategoryID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TaxAmount() As Decimal
            Get
                Return Me.TaxAmountField
            End Get
            Set
                If (Me.TaxAmountField.Equals(value) <> true) Then
                    Me.TaxAmountField = value
                    Me.RaisePropertyChanged("TaxAmount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TransactionDay() As Integer
            Get
                Return Me.TransactionDayField
            End Get
            Set
                If (Me.TransactionDayField.Equals(value) <> true) Then
                    Me.TransactionDayField = value
                    Me.RaisePropertyChanged("TransactionDay")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TransactionID() As Long
            Get
                Return Me.TransactionIDField
            End Get
            Set
                If (Me.TransactionIDField.Equals(value) <> true) Then
                    Me.TransactionIDField = value
                    Me.RaisePropertyChanged("TransactionID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TransactionMonth() As Integer
            Get
                Return Me.TransactionMonthField
            End Get
            Set
                If (Me.TransactionMonthField.Equals(value) <> true) Then
                    Me.TransactionMonthField = value
                    Me.RaisePropertyChanged("TransactionMonth")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property TransactionYear() As Integer
            Get
                Return Me.TransactionYearField
            End Get
            Set
                If (Me.TransactionYearField.Equals(value) <> true) Then
                    Me.TransactionYearField = value
                    Me.RaisePropertyChanged("TransactionYear")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="User", [Namespace]:="http://schemas.datacontract.org/2004/07/BudgeteerObjects"),  _
     System.SerializableAttribute()>  _
    Partial Public Class User
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private EmailAddressField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private FirstNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private LastNameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property EmailAddress() As String
            Get
                Return Me.EmailAddressField
            End Get
            Set
                If (Object.ReferenceEquals(Me.EmailAddressField, value) <> true) Then
                    Me.EmailAddressField = value
                    Me.RaisePropertyChanged("EmailAddress")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property FirstName() As String
            Get
                Return Me.FirstNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.FirstNameField, value) <> true) Then
                    Me.FirstNameField = value
                    Me.RaisePropertyChanged("FirstName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property LastName() As String
            Get
                Return Me.LastNameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.LastNameField, value) <> true) Then
                    Me.LastNameField = value
                    Me.RaisePropertyChanged("LastName")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="ApplicationSetting", [Namespace]:="http://schemas.datacontract.org/2004/07/BudgeteerObjects"),  _
     System.SerializableAttribute()>  _
    Partial Public Class ApplicationSetting
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SettingField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ValueField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Setting() As String
            Get
                Return Me.SettingField
            End Get
            Set
                If (Object.ReferenceEquals(Me.SettingField, value) <> true) Then
                    Me.SettingField = value
                    Me.RaisePropertyChanged("Setting")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Value() As String
            Get
                Return Me.ValueField
            End Get
            Set
                If (Object.ReferenceEquals(Me.ValueField, value) <> true) Then
                    Me.ValueField = value
                    Me.RaisePropertyChanged("Value")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="BankAccount", [Namespace]:="http://schemas.datacontract.org/2004/07/BudgeteerObjects"),  _
     System.SerializableAttribute()>  _
    Partial Public Class BankAccount
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AccountIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ActiveField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BalanceField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NameField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private NumberField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private TypeField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property AccountID() As Long
            Get
                Return Me.AccountIDField
            End Get
            Set
                If (Me.AccountIDField.Equals(value) <> true) Then
                    Me.AccountIDField = value
                    Me.RaisePropertyChanged("AccountID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Active() As Boolean
            Get
                Return Me.ActiveField
            End Get
            Set
                If (Me.ActiveField.Equals(value) <> true) Then
                    Me.ActiveField = value
                    Me.RaisePropertyChanged("Active")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Balance() As Decimal
            Get
                Return Me.BalanceField
            End Get
            Set
                If (Me.BalanceField.Equals(value) <> true) Then
                    Me.BalanceField = value
                    Me.RaisePropertyChanged("Balance")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Name() As String
            Get
                Return Me.NameField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NameField, value) <> true) Then
                    Me.NameField = value
                    Me.RaisePropertyChanged("Name")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Number() As String
            Get
                Return Me.NumberField
            End Get
            Set
                If (Object.ReferenceEquals(Me.NumberField, value) <> true) Then
                    Me.NumberField = value
                    Me.RaisePropertyChanged("Number")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Type() As String
            Get
                Return Me.TypeField
            End Get
            Set
                If (Object.ReferenceEquals(Me.TypeField, value) <> true) Then
                    Me.TypeField = value
                    Me.RaisePropertyChanged("Type")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Budget", [Namespace]:="http://schemas.datacontract.org/2004/07/BudgeteerObjects"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Budget
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AmountField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BudgetIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StartDateField As System.Nullable(Of Date)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubcategoryIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Amount() As Decimal
            Get
                Return Me.AmountField
            End Get
            Set
                If (Me.AmountField.Equals(value) <> true) Then
                    Me.AmountField = value
                    Me.RaisePropertyChanged("Amount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BudgetID() As Long
            Get
                Return Me.BudgetIDField
            End Get
            Set
                If (Me.BudgetIDField.Equals(value) <> true) Then
                    Me.BudgetIDField = value
                    Me.RaisePropertyChanged("BudgetID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StartDate() As System.Nullable(Of Date)
            Get
                Return Me.StartDateField
            End Get
            Set
                If (Me.StartDateField.Equals(value) <> true) Then
                    Me.StartDateField = value
                    Me.RaisePropertyChanged("StartDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SubcategoryID() As Long
            Get
                Return Me.SubcategoryIDField
            End Get
            Set
                If (Me.SubcategoryIDField.Equals(value) <> true) Then
                    Me.SubcategoryIDField = value
                    Me.RaisePropertyChanged("SubcategoryID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="UtilizedDollars", [Namespace]:="http://schemas.datacontract.org/2004/07/BudgeteerObjects"),  _
     System.SerializableAttribute()>  _
    Partial Public Class UtilizedDollars
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AmountField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private AvailableField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BudgetField As Decimal
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BudgetDateField As System.Nullable(Of Date)
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CategoryIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private SubcategoryIDField As Long
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Amount() As Decimal
            Get
                Return Me.AmountField
            End Get
            Set
                If (Me.AmountField.Equals(value) <> true) Then
                    Me.AmountField = value
                    Me.RaisePropertyChanged("Amount")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Available() As Decimal
            Get
                Return Me.AvailableField
            End Get
            Set
                If (Me.AvailableField.Equals(value) <> true) Then
                    Me.AvailableField = value
                    Me.RaisePropertyChanged("Available")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Budget() As Decimal
            Get
                Return Me.BudgetField
            End Get
            Set
                If (Me.BudgetField.Equals(value) <> true) Then
                    Me.BudgetField = value
                    Me.RaisePropertyChanged("Budget")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BudgetDate() As System.Nullable(Of Date)
            Get
                Return Me.BudgetDateField
            End Get
            Set
                If (Me.BudgetDateField.Equals(value) <> true) Then
                    Me.BudgetDateField = value
                    Me.RaisePropertyChanged("BudgetDate")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CategoryID() As Long
            Get
                Return Me.CategoryIDField
            End Get
            Set
                If (Me.CategoryIDField.Equals(value) <> true) Then
                    Me.CategoryIDField = value
                    Me.RaisePropertyChanged("CategoryID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property SubcategoryID() As Long
            Get
                Return Me.SubcategoryIDField
            End Get
            Set
                If (Me.SubcategoryIDField.Equals(value) <> true) Then
                    Me.SubcategoryIDField = value
                    Me.RaisePropertyChanged("SubcategoryID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="Category", [Namespace]:="http://schemas.datacontract.org/2004/07/BudgeteerObjects"),  _
     System.SerializableAttribute()>  _
    Partial Public Class Category
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private ActiveField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private CategoryIDField As Long
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private DescriptionField As String
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private UserIDField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Active() As Boolean
            Get
                Return Me.ActiveField
            End Get
            Set
                If (Me.ActiveField.Equals(value) <> true) Then
                    Me.ActiveField = value
                    Me.RaisePropertyChanged("Active")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property CategoryID() As Long
            Get
                Return Me.CategoryIDField
            End Get
            Set
                If (Me.CategoryIDField.Equals(value) <> true) Then
                    Me.CategoryIDField = value
                    Me.RaisePropertyChanged("CategoryID")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property Description() As String
            Get
                Return Me.DescriptionField
            End Get
            Set
                If (Object.ReferenceEquals(Me.DescriptionField, value) <> true) Then
                    Me.DescriptionField = value
                    Me.RaisePropertyChanged("Description")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property UserID() As String
            Get
                Return Me.UserIDField
            End Get
            Set
                If (Object.ReferenceEquals(Me.UserIDField, value) <> true) Then
                    Me.UserIDField = value
                    Me.RaisePropertyChanged("UserID")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="BudgeteerService.IBudgeteer")>  _
    Public Interface IBudgeteer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/UpdateSubcategory", ReplyAction:="http://tempuri.org/IBudgeteer/UpdateSubcategoryResponse")>  _
        Function UpdateSubcategory(ByVal subcategory As BudgeteerService.Subcategory) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/DeleteSubcategory", ReplyAction:="http://tempuri.org/IBudgeteer/DeleteSubcategoryResponse")>  _
        Function DeleteSubcategory(ByVal subcategoryID As Long) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetFirstTransactionYear", ReplyAction:="http://tempuri.org/IBudgeteer/GetFirstTransactionYearResponse")>  _
        Function GetFirstTransactionYear() As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetTransaction", ReplyAction:="http://tempuri.org/IBudgeteer/GetTransactionResponse")>  _
        Function GetTransaction(ByVal transactionID As Long) As BudgeteerService.Transaction
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetTransactions", ReplyAction:="http://tempuri.org/IBudgeteer/GetTransactionsResponse")>  _
        Function GetTransactions(ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.Transaction)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetTransactionsWithCriteria", ReplyAction:="http://tempuri.org/IBudgeteer/GetTransactionsWithCriteriaResponse")>  _
        Function GetTransactionsWithCriteria(ByVal searchCriteria As BudgeteerService.TransactionFilterCriteria, ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.Transaction)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/AddTransaction", ReplyAction:="http://tempuri.org/IBudgeteer/AddTransactionResponse")>  _
        Function AddTransaction(ByVal transaction As BudgeteerService.Transaction) As Long
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/UpdateTransaction", ReplyAction:="http://tempuri.org/IBudgeteer/UpdateTransactionResponse")>  _
        Function UpdateTransaction(ByVal transaction As BudgeteerService.Transaction) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/DeleteTransaction", ReplyAction:="http://tempuri.org/IBudgeteer/DeleteTransactionResponse")>  _
        Function DeleteTransaction(ByVal transactionID As Long) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetUser", ReplyAction:="http://tempuri.org/IBudgeteer/GetUserResponse")>  _
        Function GetUser() As BudgeteerService.User
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/UpdateUserPassword", ReplyAction:="http://tempuri.org/IBudgeteer/UpdateUserPasswordResponse")>  _
        Function UpdateUserPassword(ByVal oldPassword As String, ByVal newPassword As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/UpdateUserEmailAddress", ReplyAction:="http://tempuri.org/IBudgeteer/UpdateUserEmailAddressResponse")>  _
        Function UpdateUserEmailAddress(ByVal newEmail As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/AuthenticateUser", ReplyAction:="http://tempuri.org/IBudgeteer/AuthenticateUserResponse")>  _
        Function AuthenticateUser(ByVal userID As String, ByVal password As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetApplicationSettings", ReplyAction:="http://tempuri.org/IBudgeteer/GetApplicationSettingsResponse")>  _
        Function GetApplicationSettings() As System.Collections.Generic.List(Of BudgeteerService.ApplicationSetting)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetApplicationSetting", ReplyAction:="http://tempuri.org/IBudgeteer/GetApplicationSettingResponse")>  _
        Function GetApplicationSetting(ByVal setting As String, ByVal defaultVal As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/SetApplicationSetting", ReplyAction:="http://tempuri.org/IBudgeteer/SetApplicationSettingResponse")>  _
        Function SetApplicationSetting(ByVal setting As String, ByVal value As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetBankAccount", ReplyAction:="http://tempuri.org/IBudgeteer/GetBankAccountResponse")>  _
        Function GetBankAccount(ByVal accountID As Long) As BudgeteerService.BankAccount
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetBankAccounts", ReplyAction:="http://tempuri.org/IBudgeteer/GetBankAccountsResponse")>  _
        Function GetBankAccounts() As System.Collections.Generic.List(Of BudgeteerService.BankAccount)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetPagedBankAccounts", ReplyAction:="http://tempuri.org/IBudgeteer/GetPagedBankAccountsResponse")>  _
        Function GetPagedBankAccounts(ByRef balanceTotal As Decimal, ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.BankAccount)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetActiveBankAccounts", ReplyAction:="http://tempuri.org/IBudgeteer/GetActiveBankAccountsResponse")>  _
        Function GetActiveBankAccounts() As System.Collections.Generic.List(Of BudgeteerService.BankAccount)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/AddBankAccount", ReplyAction:="http://tempuri.org/IBudgeteer/AddBankAccountResponse")>  _
        Function AddBankAccount(ByVal account As BudgeteerService.BankAccount) As Long
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/UpdateBankAccount", ReplyAction:="http://tempuri.org/IBudgeteer/UpdateBankAccountResponse")>  _
        Function UpdateBankAccount(ByVal account As BudgeteerService.BankAccount) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/DeleteBankAccount", ReplyAction:="http://tempuri.org/IBudgeteer/DeleteBankAccountResponse")>  _
        Function DeleteBankAccount(ByVal accountID As Long) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetBudget", ReplyAction:="http://tempuri.org/IBudgeteer/GetBudgetResponse")>  _
        Function GetBudget(ByVal budgetID As Long) As BudgeteerService.Budget
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetBudgets", ReplyAction:="http://tempuri.org/IBudgeteer/GetBudgetsResponse")>  _
        Function GetBudgets(ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.Budget)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetBudgetsWithCriteria", ReplyAction:="http://tempuri.org/IBudgeteer/GetBudgetsWithCriteriaResponse")>  _
        Function GetBudgetsWithCriteria(ByVal startDate As System.Nullable(Of Date), ByVal subcategoryType As String, ByRef budgetTotal As Decimal, ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.Budget)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetBudgetFirstYear", ReplyAction:="http://tempuri.org/IBudgeteer/GetBudgetFirstYearResponse")>  _
        Function GetBudgetFirstYear() As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/AddBudget", ReplyAction:="http://tempuri.org/IBudgeteer/AddBudgetResponse")>  _
        Function AddBudget(ByVal budget As BudgeteerService.Budget) As Long
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/CopyBudgets", ReplyAction:="http://tempuri.org/IBudgeteer/CopyBudgetsResponse")>  _
        Function CopyBudgets(ByVal fromDate As Date, ByVal toDate As Date) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/UpdateBudget", ReplyAction:="http://tempuri.org/IBudgeteer/UpdateBudgetResponse")>  _
        Function UpdateBudget(ByVal budget As BudgeteerService.Budget) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/DeleteBudget", ReplyAction:="http://tempuri.org/IBudgeteer/DeleteBudgetResponse")>  _
        Function DeleteBudget(ByVal budgetID As Long) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetUtilizedDollars", ReplyAction:="http://tempuri.org/IBudgeteer/GetUtilizedDollarsResponse")>  _
        Function GetUtilizedDollars(ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.UtilizedDollars)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetUtilizedDollarsWithCriteria", ReplyAction:="http://tempuri.org/IBudgeteer/GetUtilizedDollarsWithCriteriaResponse")>  _
        Function GetUtilizedDollarsWithCriteria(ByVal budgetDate As System.Nullable(Of Date), ByVal subcategoryType As String, ByRef totalUtilized As Decimal, ByRef totalBudget As Decimal, ByRef totalAvailableDollars As Decimal, ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.UtilizedDollars)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetCategory", ReplyAction:="http://tempuri.org/IBudgeteer/GetCategoryResponse")>  _
        Function GetCategory(ByVal categoryID As Long) As BudgeteerService.Category
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetActiveCategories", ReplyAction:="http://tempuri.org/IBudgeteer/GetActiveCategoriesResponse")>  _
        Function GetActiveCategories() As System.Collections.Generic.List(Of BudgeteerService.Category)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetCategories", ReplyAction:="http://tempuri.org/IBudgeteer/GetCategoriesResponse")>  _
        Function GetCategories() As System.Collections.Generic.List(Of BudgeteerService.Category)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/AddCategory", ReplyAction:="http://tempuri.org/IBudgeteer/AddCategoryResponse")>  _
        Function AddCategory(ByVal category As BudgeteerService.Category) As Long
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/UpdateCategory", ReplyAction:="http://tempuri.org/IBudgeteer/UpdateCategoryResponse")>  _
        Function UpdateCategory(ByVal category As BudgeteerService.Category) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/DeleteCategory", ReplyAction:="http://tempuri.org/IBudgeteer/DeleteCategoryResponse")>  _
        Function DeleteCategory(ByVal categoryID As Long) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetSubcategory", ReplyAction:="http://tempuri.org/IBudgeteer/GetSubcategoryResponse")>  _
        Function GetSubcategory(ByVal subcategoryID As Long) As BudgeteerService.Subcategory
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetActiveSubcategories", ReplyAction:="http://tempuri.org/IBudgeteer/GetActiveSubcategoriesResponse")>  _
        Function GetActiveSubcategories() As System.Collections.Generic.List(Of BudgeteerService.Subcategory)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetSubcategories", ReplyAction:="http://tempuri.org/IBudgeteer/GetSubcategoriesResponse")>  _
        Function GetSubcategories() As System.Collections.Generic.List(Of BudgeteerService.Subcategory)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetSubcategoriesByCategoryID", ReplyAction:="http://tempuri.org/IBudgeteer/GetSubcategoriesByCategoryIDResponse")>  _
        Function GetSubcategoriesByCategoryID(ByVal categoryID As Long) As System.Collections.Generic.List(Of BudgeteerService.Subcategory)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/GetActiveSubcategoriesByCategoryID", ReplyAction:="http://tempuri.org/IBudgeteer/GetActiveSubcategoriesByCategoryIDResponse")>  _
        Function GetActiveSubcategoriesByCategoryID(ByVal categoryID As Long) As System.Collections.Generic.List(Of BudgeteerService.Subcategory)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IBudgeteer/AddSubcategory", ReplyAction:="http://tempuri.org/IBudgeteer/AddSubcategoryResponse")>  _
        Function AddSubcategory(ByVal subcategory As BudgeteerService.Subcategory) As Long
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")>  _
    Public Interface IBudgeteerChannel
        Inherits BudgeteerService.IBudgeteer, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")>  _
    Partial Public Class BudgeteerClient
        Inherits System.ServiceModel.ClientBase(Of BudgeteerService.IBudgeteer)
        Implements BudgeteerService.IBudgeteer
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function UpdateSubcategory(ByVal subcategory As BudgeteerService.Subcategory) As Integer Implements BudgeteerService.IBudgeteer.UpdateSubcategory
            Return MyBase.Channel.UpdateSubcategory(subcategory)
        End Function
        
        Public Function DeleteSubcategory(ByVal subcategoryID As Long) As Integer Implements BudgeteerService.IBudgeteer.DeleteSubcategory
            Return MyBase.Channel.DeleteSubcategory(subcategoryID)
        End Function
        
        Public Function GetFirstTransactionYear() As Integer Implements BudgeteerService.IBudgeteer.GetFirstTransactionYear
            Return MyBase.Channel.GetFirstTransactionYear
        End Function
        
        Public Function GetTransaction(ByVal transactionID As Long) As BudgeteerService.Transaction Implements BudgeteerService.IBudgeteer.GetTransaction
            Return MyBase.Channel.GetTransaction(transactionID)
        End Function
        
        Public Function GetTransactions(ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.Transaction) Implements BudgeteerService.IBudgeteer.GetTransactions
            Return MyBase.Channel.GetTransactions(paginator)
        End Function
        
        Public Function GetTransactionsWithCriteria(ByVal searchCriteria As BudgeteerService.TransactionFilterCriteria, ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.Transaction) Implements BudgeteerService.IBudgeteer.GetTransactionsWithCriteria
            Return MyBase.Channel.GetTransactionsWithCriteria(searchCriteria, paginator)
        End Function
        
        Public Function AddTransaction(ByVal transaction As BudgeteerService.Transaction) As Long Implements BudgeteerService.IBudgeteer.AddTransaction
            Return MyBase.Channel.AddTransaction(transaction)
        End Function
        
        Public Function UpdateTransaction(ByVal transaction As BudgeteerService.Transaction) As Integer Implements BudgeteerService.IBudgeteer.UpdateTransaction
            Return MyBase.Channel.UpdateTransaction(transaction)
        End Function
        
        Public Function DeleteTransaction(ByVal transactionID As Long) As Integer Implements BudgeteerService.IBudgeteer.DeleteTransaction
            Return MyBase.Channel.DeleteTransaction(transactionID)
        End Function
        
        Public Function GetUser() As BudgeteerService.User Implements BudgeteerService.IBudgeteer.GetUser
            Return MyBase.Channel.GetUser
        End Function
        
        Public Function UpdateUserPassword(ByVal oldPassword As String, ByVal newPassword As String) As Integer Implements BudgeteerService.IBudgeteer.UpdateUserPassword
            Return MyBase.Channel.UpdateUserPassword(oldPassword, newPassword)
        End Function
        
        Public Function UpdateUserEmailAddress(ByVal newEmail As String) As Integer Implements BudgeteerService.IBudgeteer.UpdateUserEmailAddress
            Return MyBase.Channel.UpdateUserEmailAddress(newEmail)
        End Function
        
        Public Function AuthenticateUser(ByVal userID As String, ByVal password As String) As Integer Implements BudgeteerService.IBudgeteer.AuthenticateUser
            Return MyBase.Channel.AuthenticateUser(userID, password)
        End Function
        
        Public Function GetApplicationSettings() As System.Collections.Generic.List(Of BudgeteerService.ApplicationSetting) Implements BudgeteerService.IBudgeteer.GetApplicationSettings
            Return MyBase.Channel.GetApplicationSettings
        End Function
        
        Public Function GetApplicationSetting(ByVal setting As String, ByVal defaultVal As String) As String Implements BudgeteerService.IBudgeteer.GetApplicationSetting
            Return MyBase.Channel.GetApplicationSetting(setting, defaultVal)
        End Function
        
        Public Function SetApplicationSetting(ByVal setting As String, ByVal value As String) As Integer Implements BudgeteerService.IBudgeteer.SetApplicationSetting
            Return MyBase.Channel.SetApplicationSetting(setting, value)
        End Function
        
        Public Function GetBankAccount(ByVal accountID As Long) As BudgeteerService.BankAccount Implements BudgeteerService.IBudgeteer.GetBankAccount
            Return MyBase.Channel.GetBankAccount(accountID)
        End Function
        
        Public Function GetBankAccounts() As System.Collections.Generic.List(Of BudgeteerService.BankAccount) Implements BudgeteerService.IBudgeteer.GetBankAccounts
            Return MyBase.Channel.GetBankAccounts
        End Function
        
        Public Function GetPagedBankAccounts(ByRef balanceTotal As Decimal, ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.BankAccount) Implements BudgeteerService.IBudgeteer.GetPagedBankAccounts
            Return MyBase.Channel.GetPagedBankAccounts(balanceTotal, paginator)
        End Function
        
        Public Function GetActiveBankAccounts() As System.Collections.Generic.List(Of BudgeteerService.BankAccount) Implements BudgeteerService.IBudgeteer.GetActiveBankAccounts
            Return MyBase.Channel.GetActiveBankAccounts
        End Function
        
        Public Function AddBankAccount(ByVal account As BudgeteerService.BankAccount) As Long Implements BudgeteerService.IBudgeteer.AddBankAccount
            Return MyBase.Channel.AddBankAccount(account)
        End Function
        
        Public Function UpdateBankAccount(ByVal account As BudgeteerService.BankAccount) As Integer Implements BudgeteerService.IBudgeteer.UpdateBankAccount
            Return MyBase.Channel.UpdateBankAccount(account)
        End Function
        
        Public Function DeleteBankAccount(ByVal accountID As Long) As Integer Implements BudgeteerService.IBudgeteer.DeleteBankAccount
            Return MyBase.Channel.DeleteBankAccount(accountID)
        End Function
        
        Public Function GetBudget(ByVal budgetID As Long) As BudgeteerService.Budget Implements BudgeteerService.IBudgeteer.GetBudget
            Return MyBase.Channel.GetBudget(budgetID)
        End Function
        
        Public Function GetBudgets(ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.Budget) Implements BudgeteerService.IBudgeteer.GetBudgets
            Return MyBase.Channel.GetBudgets(paginator)
        End Function
        
        Public Function GetBudgetsWithCriteria(ByVal startDate As System.Nullable(Of Date), ByVal subcategoryType As String, ByRef budgetTotal As Decimal, ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.Budget) Implements BudgeteerService.IBudgeteer.GetBudgetsWithCriteria
            Return MyBase.Channel.GetBudgetsWithCriteria(startDate, subcategoryType, budgetTotal, paginator)
        End Function
        
        Public Function GetBudgetFirstYear() As Integer Implements BudgeteerService.IBudgeteer.GetBudgetFirstYear
            Return MyBase.Channel.GetBudgetFirstYear
        End Function
        
        Public Function AddBudget(ByVal budget As BudgeteerService.Budget) As Long Implements BudgeteerService.IBudgeteer.AddBudget
            Return MyBase.Channel.AddBudget(budget)
        End Function
        
        Public Function CopyBudgets(ByVal fromDate As Date, ByVal toDate As Date) As Integer Implements BudgeteerService.IBudgeteer.CopyBudgets
            Return MyBase.Channel.CopyBudgets(fromDate, toDate)
        End Function
        
        Public Function UpdateBudget(ByVal budget As BudgeteerService.Budget) As Integer Implements BudgeteerService.IBudgeteer.UpdateBudget
            Return MyBase.Channel.UpdateBudget(budget)
        End Function
        
        Public Function DeleteBudget(ByVal budgetID As Long) As Integer Implements BudgeteerService.IBudgeteer.DeleteBudget
            Return MyBase.Channel.DeleteBudget(budgetID)
        End Function
        
        Public Function GetUtilizedDollars(ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.UtilizedDollars) Implements BudgeteerService.IBudgeteer.GetUtilizedDollars
            Return MyBase.Channel.GetUtilizedDollars(paginator)
        End Function
        
        Public Function GetUtilizedDollarsWithCriteria(ByVal budgetDate As System.Nullable(Of Date), ByVal subcategoryType As String, ByRef totalUtilized As Decimal, ByRef totalBudget As Decimal, ByRef totalAvailableDollars As Decimal, ByRef paginator As BudgeteerService.Paginator) As System.Collections.Generic.List(Of BudgeteerService.UtilizedDollars) Implements BudgeteerService.IBudgeteer.GetUtilizedDollarsWithCriteria
            Return MyBase.Channel.GetUtilizedDollarsWithCriteria(budgetDate, subcategoryType, totalUtilized, totalBudget, totalAvailableDollars, paginator)
        End Function
        
        Public Function GetCategory(ByVal categoryID As Long) As BudgeteerService.Category Implements BudgeteerService.IBudgeteer.GetCategory
            Return MyBase.Channel.GetCategory(categoryID)
        End Function
        
        Public Function GetActiveCategories() As System.Collections.Generic.List(Of BudgeteerService.Category) Implements BudgeteerService.IBudgeteer.GetActiveCategories
            Return MyBase.Channel.GetActiveCategories
        End Function
        
        Public Function GetCategories() As System.Collections.Generic.List(Of BudgeteerService.Category) Implements BudgeteerService.IBudgeteer.GetCategories
            Return MyBase.Channel.GetCategories
        End Function
        
        Public Function AddCategory(ByVal category As BudgeteerService.Category) As Long Implements BudgeteerService.IBudgeteer.AddCategory
            Return MyBase.Channel.AddCategory(category)
        End Function
        
        Public Function UpdateCategory(ByVal category As BudgeteerService.Category) As Integer Implements BudgeteerService.IBudgeteer.UpdateCategory
            Return MyBase.Channel.UpdateCategory(category)
        End Function
        
        Public Function DeleteCategory(ByVal categoryID As Long) As Integer Implements BudgeteerService.IBudgeteer.DeleteCategory
            Return MyBase.Channel.DeleteCategory(categoryID)
        End Function
        
        Public Function GetSubcategory(ByVal subcategoryID As Long) As BudgeteerService.Subcategory Implements BudgeteerService.IBudgeteer.GetSubcategory
            Return MyBase.Channel.GetSubcategory(subcategoryID)
        End Function
        
        Public Function GetActiveSubcategories() As System.Collections.Generic.List(Of BudgeteerService.Subcategory) Implements BudgeteerService.IBudgeteer.GetActiveSubcategories
            Return MyBase.Channel.GetActiveSubcategories
        End Function
        
        Public Function GetSubcategories() As System.Collections.Generic.List(Of BudgeteerService.Subcategory) Implements BudgeteerService.IBudgeteer.GetSubcategories
            Return MyBase.Channel.GetSubcategories
        End Function
        
        Public Function GetSubcategoriesByCategoryID(ByVal categoryID As Long) As System.Collections.Generic.List(Of BudgeteerService.Subcategory) Implements BudgeteerService.IBudgeteer.GetSubcategoriesByCategoryID
            Return MyBase.Channel.GetSubcategoriesByCategoryID(categoryID)
        End Function
        
        Public Function GetActiveSubcategoriesByCategoryID(ByVal categoryID As Long) As System.Collections.Generic.List(Of BudgeteerService.Subcategory) Implements BudgeteerService.IBudgeteer.GetActiveSubcategoriesByCategoryID
            Return MyBase.Channel.GetActiveSubcategoriesByCategoryID(categoryID)
        End Function
        
        Public Function AddSubcategory(ByVal subcategory As BudgeteerService.Subcategory) As Long Implements BudgeteerService.IBudgeteer.AddSubcategory
            Return MyBase.Channel.AddSubcategory(subcategory)
        End Function
    End Class
End Namespace
